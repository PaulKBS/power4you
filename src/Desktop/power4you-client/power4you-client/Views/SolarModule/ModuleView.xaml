<UserControl x:Class="power4you_client.Views.SolarModule.ModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="950"
             Background="{DynamicResource MaterialDesignBackground}">

    <UserControl.Resources>
        <Storyboard x:Key="FadeIn">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                            From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <!-- DataGrid Row Animation Style -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform Y="20"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                           From="0" To="1" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                           From="20" To="0" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Button Animation Style -->
        <Style x:Key="AnimatedIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1.1" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1.1" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                           To="1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                           To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header with Animation -->
        <Grid Grid.Row="0" Margin="0,0,0,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Kind="SolarPanel" 
                                       Width="32" 
                                       Height="32"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                <TextBlock Text="Solarmodule Verwaltung" 
                         FontSize="24" 
                         FontWeight="Medium"
                         Margin="16,0,0,0"
                         VerticalAlignment="Center"/>
            </StackPanel>

            <Button Grid.Column="1"
                    Style="{StaticResource MaterialDesignFlatButton}"
                    Click="AddModul_Click">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Plus" 
                                           Width="24"
                                           Height="24"
                                           Margin="0,0,8,0"/>
                    <TextBlock Text="Neues Modul"/>
                </StackPanel>
            </Button>
        </Grid>

        <!-- Enhanced Search Box -->
        <materialDesign:Card Grid.Row="1" 
                            Margin="0,0,0,20"
                            Padding="8"
                            Background="{DynamicResource MaterialDesignBackground}">
            <TextBox x:Name="SearchBox"
                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     materialDesign:HintAssist.Hint="Suchen Sie nach Modulbezeichnungen..."
                     materialDesign:TextFieldAssist.HasClearButton="True"
                     materialDesign:TextFieldAssist.PrefixText="🔍"
                     TextChanged="SearchBox_TextChanged"/>
        </materialDesign:Card>

        <!-- Enhanced Module List -->
        <materialDesign:Card Grid.Row="2"
                            Background="{DynamicResource MaterialDesignBackground}">
            <DataGrid x:Name="ModuleDataGrid"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      RowStyle="{StaticResource DataGridRowStyle}"
                      Style="{StaticResource MaterialDesignDataGrid}"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Bezeichnung" 
                                      Binding="{Binding Bezeichnung}" 
                                      Width="*"/>
                    <DataGridTextColumn Header="Leistung" 
                                      Binding="{Binding Pmpp, StringFormat={}{0} W}" 
                                      Width="Auto"/>
                    <DataGridTextColumn Header="Spannung" 
                                      Binding="{Binding Umpp, StringFormat={}{0} V}" 
                                      Width="Auto"/>
                    <DataGridTextColumn Header="Strom" 
                                      Binding="{Binding Impp, StringFormat={}{0} A}" 
                                      Width="Auto"/>
                    <DataGridTemplateColumn Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{StaticResource AnimatedIconButton}"
                                            Click="EditButton_Click"
                                            Tag="{Binding}"
                                            ToolTip="Modul bearbeiten">
                                        <materialDesign:PackIcon Kind="Pencil"/>
                                    </Button>
                                    <Button Style="{StaticResource AnimatedIconButton}"
                                            Click="DeleteButton_Click"
                                            Tag="{Binding}"
                                            ToolTip="Modul löschen">
                                        <materialDesign:PackIcon Kind="Delete"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </materialDesign:Card>
    </Grid>
</UserControl> 